(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{442:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"cloudlinux-os-kernel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cloudlinux-os-kernel"}},[t._v("#")]),t._v(" CloudLinux OS kernel")]),t._v(" "),s("h2",{attrs:{id:"hybrid-kernels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hybrid-kernels"}},[t._v("#")]),t._v(" Hybrid Kernels")]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("CloudLinux 6 Hybrid kernel")])])]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 6 Hybrid Kernel is "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 7 (3.10.0) kernel compiled for CloudLinux 6 OS. New 3.10 kernel features a set of performance and scalability improvements related to  "),s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" , networking and memory management, available in  "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux 7 OS ")]),t._v(" . It also features improved  "),s("span",{staticClass:"notranslate"},[t._v(" CPU ")]),t._v("  scheduler for better overall system throughput and latency.")]),t._v(" "),s("p",[t._v("Please find information on the main features of 3.10 kernel branch on the links:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://kernelnewbies.org/Linux_3.10#head-e740f930dfd021616cc42e8abf21c79d0b07e217",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kernelnewbies.org/Linux_3.10#head-e740f930dfd021616cc42e8abf21c79d0b07e217"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.kernel.org/pub/linux/kernel/v3.0/ChangeLog-3.10.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.kernel.org/pub/linux/kernel/v3.0/ChangeLog-3.10.1"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("CloudLinux 7 Hybrid kernel")])])]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 7 Hybrid Kernel is essentially EL8-based (4.18) kernel compiled for CloudLinux OS 7.")]),t._v(" "),s("p",[t._v("You can find more information on 4.18 kernel branch using this link:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.0_release_notes/new-features#kernel",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.0_release_notes/new-features#kernel"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("How to migrate from the normal to hybrid channel ("),s("strong",[t._v("CL6h")]),t._v("):")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("The system must be registered in CLN.")])]),s("ol",[s("li",[s("p",[t._v("Update "),s("span",{staticClass:"notranslate"},[t._v(" rhn-client-tools ")]),t._v(" from production")])]),t._v(" "),s("li",[s("p",[t._v("Run "),s("span",{staticClass:"notranslate"},[t._v(" normal-to-hybrid ")]),t._v(" script.")])]),t._v(" "),s("li",[s("p",[t._v("Reboot after script execution is completed.")])])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum update rhn-client-tools\nnormal-to-hybrid\nreboot\n")])])])]),t._v(" "),s("p",[t._v("How to migrate from the normal to hybrid channel ("),s("strong",[t._v("CL7h")]),t._v("):")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("The system must be registered in CLN.")])]),s("ol",[s("li",[s("p",[t._v("Update "),s("span",{staticClass:"notranslate"},[t._v(" rhn-client-tools rhn-check rhn-setup ")]),t._v(" from testing repository")])]),t._v(" "),s("li",[s("p",[t._v("Run "),s("span",{staticClass:"notranslate"},[t._v(" normal-to-hybrid ")]),t._v(" script.")])]),t._v(" "),s("li",[s("p",[t._v("Reboot after script execution is completed.")])])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum update rhn-client-tools rhn-check rhn-setup\nnormal-to-hybrid\nreboot\n")])])])]),t._v(" "),s("p",[t._v("How to migrate from hybrid to the normal channel (for both CL6h and CL7h):")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("The system should be registered in CLN.")])]),s("ol",[s("li",[s("p",[t._v("Run "),s("span",{staticClass:"notranslate"},[t._v(" hybrid-to-normal ")]),t._v(" script.")])]),t._v(" "),s("li",[s("p",[t._v("Reboot after script execution is completed.")])])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("hybrid-to-normal\nreboot\n")])])])]),t._v(" "),s("p",[s("strong",[t._v("Known limitations and issues of CloudLinux 6 Hybrid kernel")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("We do not remove Hybrid kernel after migration from Hybrid to the normal channel, but we remove "),s("span",{staticClass:"notranslate"},[t._v(" linux-firmware ")]),t._v(" package which is needed to boot Hybrid kernel. This is because "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 6 does not allow to remove the package of currently running kernel. Proper removal procedure will be implemented, but for now, we should warn users "),s("em",[t._v("not to boot Hybrid kernel if they have migrated to normal channel")]),t._v(".")])]),t._v(" "),s("li",[s("p",[t._v("Kernel module signature isn't checking for now, as 3.10 kernel is using x509 certificates to generate keys and CL6 cannot detect signatures created in such way. The solution will be implemented.")])])]),t._v(" "),s("p",[s("strong",[t._v("Known limitations and issues of CloudLinux 7 Hybrid kernel")])]),t._v(" "),s("p",[t._v("Features that are absent in the current kernel build:")]),t._v(" "),s("ul",[s("li",[t._v("Per LVE traffic accounting")])]),t._v(" "),s("p",[t._v("Note that Symlink Owner Match Protection is enabled by default in CL7 Hybrid kernel. To disable it, use "),s("code",[t._v("sysctl")]),t._v(" utility:")]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sysctl -w fs.enforce_symlinksifowner=0\n")])])])]),t._v(" "),s("p",[t._v("Find more details on "),s("router-link",{attrs:{to:"/kernel_settings/#securelinks"}},[t._v("symlink owner match protection")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"securelinks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#securelinks"}},[t._v("#")]),t._v(" SecureLinks")]),t._v(" "),s("p",[t._v("CloudLinux provides comprehensive protection against symbolic link attacks popular in shared hosting environment.")]),t._v(" "),s("p",[t._v("The protection requires setting multiple kernel options to be enabled.")]),t._v(" "),s("h3",{attrs:{id:"symlink-owner-match-protection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#symlink-owner-match-protection"}},[t._v("#")]),t._v(" Symlink owner match protection")]),t._v(" "),s("p",[s("strong",[s("em",[t._v("fs.enforce_symlinksifowner")])])]),t._v(" "),s("p",[t._v("To protect against symlink attack where attacker tricks Apache web server to read some other user PHP config files, or other sensitive file, enable:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.enforce_symlinksifowner=1\n")])])])]),t._v(" "),s("p",[t._v("Setting this option will deny any process running under gid "),s("em",[t._v("fs.symlinkown_gid")]),t._v(" to follow the symlink if owner of the link doesn’t match the owner of the target file.")]),t._v(" "),s("p",[t._v("Defaults:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.enforce_symlinksifowner = 1\nfs.symlinkown_gid = 48\n")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("span",{staticClass:"notranslate"},[s("em",[t._v("fs.enforce_symlinksifowner = 0")])])]),t._v(" "),s("td",[t._v("do not check "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" ownership")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[s("em",[t._v("fs.enforce_symlinksifowner = 1")])])]),t._v(" "),s("td",[t._v("deny if "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" ownership doesn’t match target, and process "),s("span",{staticClass:"notranslate"},[t._v(" gid ")]),t._v(" matches "),s("span",{staticClass:"notranslate"},[t._v(" _symlinkown_gid _ ")])])])])]),t._v(" "),s("p",[t._v("When "),s("span",{staticClass:"notranslate"},[s("em",[t._v("fs.enforce_symlinksifowner")])]),t._v(" set to 1, processes with "),s("span",{staticClass:"notranslate"},[t._v(" GID ")]),t._v(" 48 will not be able to follow "),s("span",{staticClass:"notranslate"},[t._v(" symlinks ")]),t._v(" if they are owned by "),s("span",{staticClass:"notranslate"},[t._v(" user1 ")]),t._v(" , but point to file owned "),s("span",{staticClass:"notranslate"},[t._v(" user2 ")]),t._v(" .")]),t._v(" "),s("p",[t._v("Please, note that "),s("span",{staticClass:"notranslate"},[s("em",[t._v("fs.enforce_symlinksifowner = 2")])]),t._v(" is deprecated and can cause issues for the system operation.\n"),s("span",{staticClass:"notranslate"})]),t._v(" "),s("p",[s("strong",[s("em",[t._v("fs.symlinkown_gid")])])]),t._v(" "),s("p",[t._v("On standard "),s("span",{staticClass:"notranslate"},[t._v(" RPM Apache ")]),t._v(" installation, "),s("span",{staticClass:"notranslate"},[t._v(" Apache ")]),t._v(" is usually running under "),s("span",{staticClass:"notranslate"},[t._v(" GID ")]),t._v(" 48.\nOn "),s("span",{staticClass:"notranslate"},[t._v(" cPanel ")]),t._v(" servers, "),s("span",{staticClass:"notranslate"},[t._v(" Apache ")]),t._v(" is running under user nobody, "),s("span",{staticClass:"notranslate"},[t._v(" GID ")]),t._v(" 99.")]),t._v(" "),s("p",[t._v("To change "),s("span",{staticClass:"notranslate"},[t._v(" GID ")]),t._v(" of processes that cannot follow "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" , edit the file "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/sysctl.conf")])]),t._v(" , add the line:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.symlinkown_gid = XX\n")])])])]),t._v("\nAnd execute:\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sysctl -p\n")])])])]),t._v(" "),s("p",[t._v("To disable "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" owner match protection feature, set "),s("span",{staticClass:"notranslate"},[s("em",[t._v("fs.enforce_symlinksifowner = 0")])]),t._v(" in "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/sysctl.conf")])]),t._v(" , and execute")]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sysctl -p\n")])])])]),t._v(" "),s("p",[t._v("::: danger\n/proc/sys/fs/global_root_enable [CloudLinux 7 kernel only] [applicable for kernels 3.10.0-427.36.1.lve1.4.42+]\n:::")]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[s("em",[t._v("proc/sys/fs/global_root_enable")])]),t._v(" flag enables following the "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" with root ownership. If "),s("span",{staticClass:"notranslate"},[s("em",[t._v("global_root_enable=0")])]),t._v(" , then "),s("span",{staticClass:"notranslate"},[t._v(" Symlink Owner Match Protection ")]),t._v(" does not verify the "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" owned by "),s("span",{staticClass:"notranslate"},[t._v(" root.  ")])]),t._v(" "),s("p",[t._v("For example, in the path "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/proc/self/fd")]),t._v(" ,  "),s("em",[t._v("self")])]),t._v(" is a "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" , which leads to a process directory.  The "),s("span",{staticClass:"notranslate"},[t._v(" symlink ")]),t._v(" owner is "),s("span",{staticClass:"notranslate"},[t._v(" root ")]),t._v(" . When "),s("span",{staticClass:"notranslate"},[s("em",[t._v("global_root_enable=0")]),t._v(" , Symlink Owner Match Protection ")]),t._v(" excludes this element from the verification. When "),s("span",{staticClass:"notranslate"},[s("em",[t._v("global_root_enable=1")])]),t._v(" , the verification will be performed, which could block the access to "),s("em",[t._v("fd")]),t._v(" and cause violation of web site performance.")]),t._v(" "),s("p",[t._v("It is recommended to set "),s("em",[t._v("/proc/sys/fs/global_root_enable=0")]),t._v(" by default. If needed, set "),s("em",[t._v("/proc/sys/fs/global_root_enable=1")]),t._v(" to increase the level of protection.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Starting from lve-utils 3.0-21.2, fs.symlinkown_gid parameter values for httpd service user and fs.proc_super_gid for nagios service user is written to /etc/sysctl.d/90-cloudlinux.conf.")])]),s("h3",{attrs:{id:"link-traversal-protection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#link-traversal-protection"}},[t._v("#")]),t._v(" Link traversal protection")]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[s("router-link",{attrs:{to:"/cloudlinux_os_components/#cagefs"}},[t._v("CageFS")])],1),t._v(" is extremely powerful at stopping most information disclosure attacks, where a hacker could read sensitive files like "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/passwd")])]),t._v(" .")]),t._v(" "),s("p",[t._v("Yet, "),s("span",{staticClass:"notranslate"},[t._v(" CageFS ")]),t._v(" does not work in each and every situation. For example, on "),s("span",{staticClass:"notranslate"},[t._v(" cPanel ")]),t._v(" servers, it is not enabled in "),s("span",{staticClass:"notranslate"},[t._v(" WebDAV ")]),t._v(" server, "),s("span",{staticClass:"notranslate"},[t._v(" cPanel ")]),t._v(" file manager and webmail, as well as some FTP servers don’t include proper change rooting.")]),t._v(" "),s("p",[t._v("This allows an attacker to create symlink or hardlink to a sensitive file like "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/passwd")])]),t._v(" and then use "),s("span",{staticClass:"notranslate"},[t._v(" WebDAV ")]),t._v(" , filemanager, or webmail to read the content of that file.")]),t._v(" "),s("p",[t._v("Starting with CL6 "),s("em",[t._v("kernel 2.6.32-604.16.2.lve1.3.45")]),t._v(", you can prevent such attacks by preventing user from creating symlinks and hardlinks to files that they don’t own.")]),t._v(" "),s("p",[t._v("This is done by set following kernel options to 1:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.protected_symlinks_create = 1\nfs.protected_hardlinks_create = 1\n")])])])]),t._v(" "),s("p",[t._v("::: danger\nWe do not recommend to use protected_symlinks option for cPanel users as it might break some of the cPanel functionality.\n:::")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Link Traversal Protection is disabled by default for the new CloudLinux OS installations/convertations.")])]),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.protected_symlinks_create = 0\nfs.protected_hardlinks_create = 0\n")])])])]),t._v("\nThen setup:\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.protected_symlinks_allow_gid = id_of_group_linksafe\nfs.protected_hardlinks_allow_gid = id_of_group_linksafe\n")])])])]),t._v("\nThis is for example needed by PHP Selector to work (new versions of Alt-PHP can already correctly configure those settings).\n"),s("p",[t._v("To manually adjust the settings, edit: "),s("em",[t._v("/etc/sysctl.d/cloudlinux-linksafe.conf")]),t._v("\nand execute:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sysctl -p /etc/sysctl.d/cloudlinux-linksafe.conf\n")])])])]),t._v("\n or:\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sysctl --system\n")])])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Starting from lvemanager 4.0-25.5, if there is no /etc/sysctl.d/cloudlinux-linksafe.conf config file, selectorctl for PHP with --setup-without-cagefs and --revert-to-cagefs keys writes fs.protected_symlinks_create and fs.protected_hardlinks_create parameters to /etc/sysctl.d/90-cloudlinux.conf.")])]),s("h2",{attrs:{id:"file-change-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file-change-api"}},[t._v("#")]),t._v(" File change API")]),t._v(" "),s("h3",{attrs:{id:"general"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[t._v("#")]),t._v(" General")]),t._v(" "),s("p",[s("strong",[t._v("General description")])]),t._v(" "),s("p",[t._v("One of the main problems on a shared hosting system for file backup operations is to figure out which files have changed. Using "),s("span",{staticClass:"notranslate"},[t._v(" INOTIFY ")]),t._v(" on a 1T drive with a large number of small files and directories guarantees slow startup times, and a lot of context switching between kernel and userspace - generating additional load. On the other hand scanning disk for newly modified files is very "),s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" intensive, and can kill the performance of the fastest disks.")]),t._v(" "),s("p",[s("strong",[t._v("CloudLinux approach")])]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v(" CloudLinux File Change API ")]),t._v(" is a kernel level technology with the user space interface that buffers lists of modified files in the kernel and then off-loads that list to user space daemon.")]),t._v(" "),s("p",[t._v("After that - any software (with enough permissions) can get a list of files that has been modified for the last 24 hours.")]),t._v(" "),s("p",[t._v("The software is very simple to use and produces the  list of modified files. As such we expect file backup software, including integrated cPanel backup system to integrate with this "),s("span",{staticClass:"notranslate"},[t._v(" API ")]),t._v(" soon.")]),t._v(" "),s("h3",{attrs:{id:"usage-and-integration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage-and-integration"}},[t._v("#")]),t._v(" Usage and integration")]),t._v(" "),s("p",[s("strong",[t._v("Userland utilities")])]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v("/usr/bin/cloudlinux-backup-helper ")]),t._v(" is a utility for getting the list of changed files.")]),t._v(" "),s("p",[t._v("It is supposed to be run by a super user only.")]),t._v(" "),s("p",[t._v("Command line parameters:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-t | --timestamp retrieve file names for files modified after specified timestamp\n-u | --uid       retrieve file names for particular UID only\n")])])])]),t._v("\nIf no UID specified, are retrieved for all users. If no timestamp specified, all database events are shown.\n"),s("p",[s("strong",[t._v("Output format")])]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protocol version (1 right now), timestamp (in seconds) - up to which time data was collected\nUID:absolute path to file changed\nUID:absolute path to file changed\n…\n")])])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("The timestamp in output is needed so you can clearly identify from which timestamp to get list of changed files next.")])]),s("p",[s("strong",[s("em",[t._v("Examples:")])])]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@localhost ~]# cloudlinux-backup-helper -t 1495533489 -u <UID>\n1,1495533925\n1001:/home/user2/public_html/output.txt\n1001:/home/user2/public_html/info.php\n[root@localhost ~]# cloudlinux-backup-helper -t 1495533489\n1,1495533925\n1000:/home/user1/.bashrc\n1001:/home/user2/public_html/output.txt\n1001:/home/user2/public_html/info.php\n1003:/home/user3/logs/data.log\n")])])])]),t._v("\n**Getting changed files by end user**\n"),s("p",[s("span",{staticClass:"notranslate"},[t._v("/usr/bin/cloudlinux-backup-helper-uid")]),t._v("  is a SUID wrapper for the  "),s("span",{staticClass:"notranslate"},[t._v(" cloudlinux-backup-helper ")]),t._v("  utility that enables an end user to get the list of files changed. It accepts timestamp argument only and retrieves data of the user who is running it only.")]),t._v(" "),s("p",[s("strong",[s("em",[t._v("Examples:")])])]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[user@localhost ~]$ cloudlinux-backup-helper-uid               \n1,1495530576\n1000:/home/user/.bash_history \n\n[user@localhost ~]$ cloudlinux-backup-helper-uid -t 1495547922\n1,1495548343\n1000:/home/user/file1.txt\n1000:/home/user/file2.txt\n")])])])]),t._v("\nThis command is available within CageFS.\n"),s("h3",{attrs:{id:"installation-and-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation-and-configuration"}},[t._v("#")]),t._v(" Installation and configuration")]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("cloudlinux-fchange-0.1-5")])])]),t._v(" "),s("p",[s("strong",[t._v("Requirements")])]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v(" CloudLinux OS ")]),t._v(" 6 (requires Hybrid kernel) or 7\nKernel Version: 3.10.0-427.36.1.lve1.4.47")]),t._v(" "),s("p",[s("strong",[t._v("Installation and configuration")])]),t._v(" "),s("p",[t._v("To install "),s("span",{staticClass:"notranslate"},[t._v(" cloudlinux-fchange ")]),t._v(" system run:")]),t._v(" "),s("p",[s("em",[t._v("CloudLinux 7:")])]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install cloudlinux-fchange --enablerepo=cloudlinux-updates-testing\n")])])])]),t._v(" "),s("p",[s("em",[t._v("CloudLinux 6 Hybrid:")])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install cloudlinux-fchange --enablerepo=cloudlinux-hybrid-testing\n")])])])]),t._v("\nConfiguration file can be found in "),s("span",{staticClass:"notranslate"},[t._v("/etc/sysconfig/cloudlinux-fchange ")]),t._v(" "),s("p",[t._v("Database containing list of modified files is located at "),s("span",{staticClass:"notranslate"},[t._v("/var/lve/cloudlinux-fchange.db ")]),t._v(" by default.")]),t._v(" "),s("p",[s("strong",[t._v("Starting and stopping")])]),t._v(" "),s("p",[t._v("After successful installation the event collecting daemon starts automatically, providing all "),s("span",{staticClass:"notranslate"},[t._v(" kernel-exposed ")]),t._v(" data are in place.")]),t._v(" "),s("p",[t._v("To start daemon:\n"),s("span",{staticClass:"notranslate"},[s("em",[t._v("CloudLinux 7:")])])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl start cloudlinux-file-change-collector\n")])])])]),t._v(" "),s("p",[s("em",[t._v("CloudLinux 6 Hybrid:")])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("service cloudlinux-file-change-collector start\n")])])])]),t._v("\nTo stop daemon:\n"),s("span",{staticClass:"notranslate"}),t._v("\n_CloudLinux 7:_\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("systemctl stop cloudlinux-file-change-collector\n")])])])]),t._v(" "),s("p",[s("em",[t._v("CloudLinux 6 Hybrid:")])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("service cloudlinux-file-change-collector stop\n")])])])]),t._v(" "),s("p",[t._v("To uninstall "),s("span",{staticClass:"notranslate"},[t._v(" cloudlinux-fchange ")]),t._v(" run:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum remove cloudlinux-fchange\n")])])])]),t._v(" "),s("h3",{attrs:{id:"configuration-details"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration-details"}},[t._v("#")]),t._v(" Configuration details")]),t._v(" "),s("p",[t._v("Configuration resides in "),s("span",{staticClass:"notranslate"},[t._v("/etc/sysconfig/cloudlinux-fchange")]),t._v(". The following is the default configuration (see comments):\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# sqlite database file path. If commented out a default value is used\n#database_path=/var/lve/cloudlinux-fchange.db\n\n# If uncommented paths starting with 'include' one are processed only\n# Pay attention this parameter is a regular string, not a regex\n# To include more than one item just specify several lines to include:\n# include=/one\n# include=/two\n\n# If uncommented exclude paths which contain 'exclude'\n# Pay attention this parameter is a regular string, not a regex\n# To exclude more than one item just specify several lines to exclude:\n# exclude=var\n# exclude=tmp\n\n# Daemon polling interval in seconds\npolling_interval=5 \n\n# Time to keep entries in days. Does not clean if commented out or zero\ntime_to_keep=1\n\n# User read-only mode minimal UID\n# If file change collector stopped, all users with UID >= user_ro_mode_min_uid\n# are restricted to write to their home directory. This prevents to miss\n# a file change event.\n# Value of -1 (default) allows to disable the feature\nuser_ro_mode_min_uid=-1\n\n# Minimal UID of events to be processed.\n# Events of users with UID less then specified are not handled.\n# By default 500 (non-system users for redhat-based systems)\n#minimal_event_uid=500\n \n# SQLite shared lock prevents setting more restrictive locks. That is a\n# process cannot write to a database table when a concurrent process reads\n# from the table. As saving data to database is considered far more important\n# than getting them (data could be reread a second later after all), database\n# writer could try to terminate concurrent reading processes. Just set\n# terminate rivals to 'yes' to turn this ability on.\n# terminate_rivals=no \n\n# Events to be handled. Currently the following types of events are processed:\n# 1. file creation\n# 2. file deletion\n# 3. directory creation\n# 4. directory deletion\n# 5. file content/metadata modification\n# 6. file/directory attributes/ownership modification\n# 7. hardlink creation\n# 8. symlink creation\n# 9. file/directory moving/renaming\n# By default all events are processed. Keep in mind that events for a filepath\n# are cached, i.e if a file was deleted and then a file with the same absolute\n# name is created, only the deletion event is triggerred. Changing file\n# modification timestamp with command 'touch' will trigger modification event\n# as if a file content is modified.\n# Currently supported options are:\n# file_created, file_modified, file_deleted, dir_created, dir_deleted,\n# owner_changed, attrib_changed, moved, hardlink_created, symlink_created, all\n# Options that don't have 'file' or 'dir' prefix, applied to both files and\n# directories. To set more than one options, separate them with commas,\n# e.g. event_types=file_created,file_deleted,file_modified. Unknown options are\n# ignored.\n#\n# event_types=all\n")])])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Please keep in mind, that current implementation implies that one process is writing to a database and another is reading from it. As reading sets shared lock to a database table, the writing process cannot write to the table until the lock is released. That’s why passing a timestamp to cloudlinux-backup-helpermatters: this way the number of records to be returned is substantially decreased, lowering the processing time and filtering out old records. Likewise, pay attention to narrowing the scope of events being recorded. Chances are that changing attributes, ownership, directory creation/deletion, symlink events are not relevant and there’s no need to keep them.")])]),s("h3",{attrs:{id:"low-level-access"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#low-level-access"}},[t._v("#")]),t._v(" Low-level access")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Using this options is dangerous, and might cause problems with "),s("span",{staticClass:"notranslate"},[t._v("CloudLinux File Change API.")])])]),s("p",[t._v("The kernel exposes the functionality to folder.")]),t._v(" "),s("ol",[s("li",[s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("enable")])]),t._v(" - enable/disable the functionality. Write 1 to this file to enable, 0 to disable. If disabled, no events are coming to events file.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("events")])]),t._v(" - the modified files log itself. Events in the format "),s("span",{staticClass:"notranslate"},[t._v(" <EVENT_ID>:<EVENT_TYPE_ID>:<USER_ID>:<FILE_PATH> ")]),t._v(" are constantly appending to the end of the file if datacycle enabled. File events are never duplicated: if we have file modification event, we would not get file deletion event if the file has been later deleted. This events buffer has limited capacity, therefore from time to time, the events log requires flushing.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("flush")])]),t._v(" - a file for clearing events log. For flushing, the last "),s("span",{staticClass:"notranslate"},[t._v(" event_id ")]),t._v(" from the events file is written to this file. Right after this, events log is truncated to that "),s("span",{staticClass:"notranslate"},[t._v(" event_id ")]),t._v(" .")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("user_ro_mode")])]),t._v(" - forbidding users with UIDs equal or bigger that set in this file writing to their home directories. At the boot, the file has -1. When it’s written positive value, say 500, the system starts effectively preventing users from modifying their home dirs (on write attempt a user gets "),s("span",{staticClass:"notranslate"},[t._v(" ‘read-only filesystem’ ")]),t._v(" error). This feature is designed to prevent users from updating their home dirs when events are not handled.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("entries_in_buffer")])]),t._v(" - just counter of log entries of events file.")])]),t._v(" "),s("li",[s("p",[s("span",{staticClass:"notranslate"},[s("strong",[t._v("min_event_uid")])]),t._v(" - this file has minimal UID of events to be handled. Events from users with smaller UID are not handled. By default 500 (non-system users in redhat-based systems).")])])]),t._v(" "),s("h2",{attrs:{id:"tuned-profiles-cloudlinux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuned-profiles-cloudlinux"}},[t._v("#")]),t._v(" Tuned-profiles-cloudlinux")]),t._v(" "),s("p",[t._v("The "),s("span",{staticClass:"notranslate"},[s("strong",[s("em",[t._v("tuned-profiles-cloudlinux")])])]),t._v(" package brings a range of kernel under-the-hood tunings to address high LA, iowait issues what were detected earlier on particular users deploys. The package also encloses OOM adjustments to prioritize the elimination of overrun PHP, "),s("span",{staticClass:"notranslate"},[t._v(" lsphp, Phusion Passenger ")]),t._v(" workers processes over other processes (e.g. ssh, a cron job).")]),t._v(" "),s("p",[t._v("There are three profiles provided by CloudLinux:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# tuned-adm list | grep cloudlinux\n- cloudlinux-default          - Default CloudLinux tuned profile\n- cloudlinux-dummy            - Empty CloudLinux tuned profile\n- cloudlinux-vz               - Empty CloudLinux tuned profile\n")])])])]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v(" cloudlinux-dummy")]),t._v(" and  "),s("span",{staticClass:"notranslate"},[t._v(" cloudlinux-vz")]),t._v(" are used for internal needs or when  "),s("span",{staticClass:"notranslate"},[t._v(" Virtuozzo/OpenVZ ")]),t._v("  detected and actually do nothing.")]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v(" cloudlinux-default ")]),t._v(" is one to be used, it actually does the following:")]),t._v(" "),s("ol",[s("li",[t._v("Switches CPU power consumption mode to the maximum. CPU operates at maximum performance at the maximum clock rate:")])]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("governor=performance\nenergy_perf_bias=performance\n")])])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("If standard software CPU governors are used.")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Applies the following kernel options:"),s("br"),t._v(" "),s("span",{staticClass:"notranslate"},[t._v("\nvm.force_scan_thresh=100 ")]),t._v(" - Improves kernel memory clean-up in case of big number of running LVE.")])]),t._v(" "),s("p",[t._v("UBC parameters set the limits for the containers:")]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v("  ubc.dirty_ratio=100 ")]),t._v(" - Defines maximum RAM percentage for dirty memory pages.\n"),s("span",{staticClass:"notranslate"},[t._v(" dirty_background_ratio=75")]),t._v(" - Defines RAM percentage when to allow writing dirty pages on the disk.")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("em",[t._v("[CloudLinux 7 only]")]),t._v(" Detects used disk types and changes elevator to "),s("span",{staticClass:"notranslate"},[t._v(" 'deadline' ")]),t._v(" for HDD and to "),s("span",{staticClass:"notranslate"},[t._v(" 'noop' ")]),t._v(" for SSD in "),s("span",{staticClass:"notranslate"},[t._v(" /sys/block/[blockname]/queue/scheduler ")]),t._v(" .")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[s("span",{staticClass:"notranslate"},[t._v("The script uses /sys/block/[blockname]/queue/rotational flag, some RAID controllers can not set it properly. For example, SSD used for RAID but rotational is set to 1 by RAID driver. As a workaround add the following to /etc/rc.d/rc.local to make it applied on boot:")])])]),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('echo "noop" > /sys/block/[blockname]/queue/scheduler  \necho "0" > /sys/block/[blockname]/queue/rotational\n')])])])]),t._v(" "),s("p",[t._v("Where "),s("span",{staticClass:"notranslate"},[s("em",[t._v("[blockname]")])]),t._v(" is used device name, like "),s("span",{staticClass:"notranslate"},[s("em",[t._v("sda/sdb")])]),t._v(" .")]),t._v(" "),s("p",[t._v("And make it executable:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("chmod +x /etc/rc.d/rc.local\n")])])])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[s("em",[t._v("[CloudLinux 7 only]")]),t._v(" The profile sets "),s("span",{staticClass:"notranslate"},[t._v(" I/O ")]),t._v(" scheduler. For the normal discs the "),s("span",{staticClass:"notranslate"},[t._v(" Deadline Scheduler ")]),t._v(" is set to improve "),s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" performance and decrease "),s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" latency, for SSD - noop.\nWhen configuring scheduler "),s("span",{staticClass:"notranslate"},[t._v(" I/O ")]),t._v(" queue is changed and set to the value 1024 which improves overall "),s("span",{staticClass:"notranslate"},[t._v(" I/O ")]),t._v(" subsystem performance by caching "),s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" requests in memory.")])]),t._v(" "),s("li",[s("p",[t._v("Disables transparent "),s("span",{staticClass:"notranslate"},[t._v(" HugePage ")]),t._v(" .")])]),t._v(" "),s("li",[s("p",[t._v("Provides adjustment group file for OOM-Killer to kill overrun php, lsphp and "),s("span",{staticClass:"notranslate"},[t._v(" Phusion Passenger ")]),t._v(" workers first.")])])]),t._v(" "),s("p",[t._v("To install:")]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yum install tuned-profiles-cloudlinux\n")])])])]),t._v(" "),s("p",[t._v("To start using a profile:")]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("tuned-adm profile cloudlinux-default\n")])])])]),t._v(" "),s("p",[t._v("To stop using a profile:")]),t._v(" "),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("tuned-adm off\n")])])])]),t._v(" "),s("h2",{attrs:{id:"kernel-config-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kernel-config-variables"}},[t._v("#")]),t._v(" Kernel config variables")]),t._v(" "),s("p",[t._v("Starting from "),s("strong",[t._v("lvemanager 4.0-25.5")]),t._v(" , "),s("strong",[t._v("lve-utils 3.0-21.2")]),t._v(" , and "),s("strong",[t._v("cagefs-6.1-26")]),t._v(" , CloudLinux OS utilities can read/write kernel config variables from a custom config /etc/sysctl.d/90-cloudlinux.conf (earlier, the parameters were read/written only from sysctl.conf ).")]),t._v(" "),s("p",[t._v("CloudLinux OS utilities get parameter by using "),s("em",[t._v("sysctl")]),t._v(" system utility. So for now, even if a config variable is not set in the "),s("em",[t._v("sysctl.conf")]),t._v(" and in the "),s("em",[t._v("/etc/sysctl.d")]),t._v(" config files, this variable will be read by "),s("em",[t._v("sysctl")]),t._v(" utility directly from "),s("em",[t._v("/proc/sys")]),t._v(" .")]),t._v(" "),s("p",[t._v("If some kernel variable was set in "),s("em",[t._v("/etc/sysctl.d/90-cloudlinux.conf")]),t._v(" do\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sysctl --system\n")])])])]),t._v("\nto apply the parameters before reading and after writing.\n"),s("p",[t._v("Starting from "),s("strong",[t._v("cagefs-6.1-27")]),t._v(",  fs.proc_can_see_other_uid will be migrated (one time) from /etc/sysctl.conf into /etc/sysctl.d/90-cloudlinux.conf . If this variable is not set in either file, it will default to 0.\nIt is strongly advised against setting this variable in 90-cloudlinux.conf . Define it in /etc/sysctl.conf or in some other config file with an index number greater than 90-cloudlinux.conf , e.g. "),s("code",[t._v("/etc/sysctl.d/95-custom.conf")]),t._v(".")]),t._v(" "),s("p",[t._v("Starting from "),s("strong",[t._v("lve-utils-3.0-23.7")]),t._v("  fs.proc_super_gid and fs.symlinkown_gid will be migrated (one time) from /etc/sysctl.conf into /etc/sysctl.d/90-cloudlinux.conf .")]),t._v(" "),s("p",[t._v("For "),s("strong",[t._v("lve-utils")]),t._v(" versions from 3.0-21.2 to 3.0-23.7 the migration was performed the same way, but during every package install/update.\nVariables setting guidelines are the same as for CageFS (see above).")]),t._v(" "),s("p",[t._v("As requested by some our customers, we've implemented a new kernel setting to hide "),s("code",[t._v("/proc/net/{tcp,udp,unix}")]),t._v(" files for additional security/isolation.\nYou can hide them by runnign "),s("code",[t._v("sysctl -w kernel.proc_disable_net=1")]),t._v(" command, and by default, it's "),s("code",[t._v("0")]),t._v(" (nothing hidden).")]),t._v(" "),s("h2",{attrs:{id:"virtualized-proc-filesystem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#virtualized-proc-filesystem"}},[t._v("#")]),t._v(" Virtualized /proc filesystem")]),t._v(" "),s("p",[t._v("You can prevent user from seeing processes of other users (via ps/top command) as well as special files in /proc file system by setting fs.proc_can_see_other_uid sysctl.")]),t._v(" "),s("p",[t._v("To do that, edit /etc/sysctl.conf\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fs.proc_can_see_other_uid=0\nfs.proc_super_gid=600\n")])])])]),t._v("\nAnd do:\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# sysctl -p\n")])])])]),t._v("\nfs.proc_can_see_other_uid=0\n"),s("p",[t._v("If fs.proc_can_see_other_uid is set to 0, users will not be able to see special files. If it is set to 1 - user will see other processes IDs in /proc filesystem.")]),t._v(" "),s("p",[t._v("fs.proc_super_gid=XX")]),t._v(" "),s("p",[t._v("The fs.proc_super_gid sets group ID which will see system files in /proc, add any users to that group so they will see all files in /proc. Usually needed by some monitoring users like nagios or zabbix and "),s("router-link",{attrs:{to:"/command-line_tools/#cldetect"}},[t._v("cldetect utility")]),t._v(" can configure few most commonly used monitoring software automatically.")],1),t._v(" "),s("p",[t._v("Virtualized /proc filesystem will only display following files (as well as directories for PIDs for the user) to unprivileged users:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/proc/cpuinfo\n/proc/version\n/proc/stat\n/proc/uptime\n/proc/loadavg\n/proc/filesystems\n/proc/stat\n/proc/cmdline\n/proc/meminfo\n/proc/mounts\n/proc/tcp\n/proc/tcp6\n/proc/udp\n/proc/udp6\n/proc/assocs\n/proc/raw\n/proc/raw6\n/proc/unix\n/proc/dev\n")])])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Starting from lve-utils 3.0-21.2, fs.proc_super_gid parameter in da_add_admin utility is written to /etc/sysctl.d/90-cloudlinux.conf.")])]),s("h3",{attrs:{id:"remounting-procfs-with-hidepid-option"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remounting-procfs-with-hidepid-option"}},[t._v("#")]),t._v(' Remounting procfs with "hidepid" option')]),t._v(" "),s("p",[t._v("In "),s("strong",[t._v("lve-utils-2.1-3.2")]),t._v(" and later "),s("code",[t._v("/proc")]),t._v(" can be remounted with "),s("code",[t._v("hidepid=2")]),t._v(" option to enable additional protection for procfs. This remount is performed in lve_namespaces service.\nThis option is in sync with "),s("code",[t._v("fs.proc_can_see_other_uid")]),t._v(" kernel parameter described above.\nWhen "),s("code",[t._v("/etc/sysctl.conf")]),t._v(" does not contain "),s("code",[t._v("fs.proc_can_see_other_uid")]),t._v(" setting, the protection is off (procfs is remounted with "),s("code",[t._v("hidepid=0")]),t._v(" option). In this case "),s("code",[t._v("fs.proc_super_gid")]),t._v(" setting is ignored. Users are able to see full "),s("code",[t._v("/proc")]),t._v(" including processes of other users on a server. This is a default behavior.")]),t._v(" "),s("p",[t._v("If "),s("code",[t._v("/etc/sysctl.conf")]),t._v(" contains "),s("code",[t._v("fs.proc_can_see_other_uid=1")]),t._v(" setting, then "),s("code",[t._v("/proc")]),t._v(" will be remounted with "),s("code",[t._v("hidepid=0")]),t._v(" option (disable "),s("code",[t._v("hidepid")]),t._v(" protection for all users).\nIf "),s("code",[t._v("/etc/sysctl.conf")]),t._v(" contains "),s("code",[t._v("fs.proc_can_see_other_uid=0")]),t._v(" setting, then "),s("code",[t._v("/proc")]),t._v(" will be remounted with "),s("code",[t._v("hidepid=2")]),t._v(" option (enable "),s("code",[t._v("hidepid")]),t._v(" protection for all users).\nIf "),s("code",[t._v("/etc/sysctl.conf")]),t._v(" contains "),s("code",[t._v("fs.proc_can_see_other_uid=0")]),t._v(" and "),s("code",[t._v("fs.proc_super_gid=$GID")]),t._v(" settings, then "),s("code",[t._v("/proc")]),t._v(" will be remounted with "),s("code",[t._v("hidepid=2, gid=$GID")]),t._v(" options (enable "),s("code",[t._v("hidepid")]),t._v(" for all users except users in group with gid $GID).")]),t._v(" "),s("p",[t._v("To apply "),s("code",[t._v("/etc/sysctl.conf")]),t._v(" changes, you should execute\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("service lve_namespaces restart\n")])])])]),t._v("\n Or\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/usr/share/cloudlinux/remount_proc.py\n")])])])]),t._v(" "),s("p",[t._v("So, admin can prevent users from seeing processes of other users via "),s("code",[t._v("fs.proc_can_see_other_uid")]),t._v(" and "),s("code",[t._v("fs.proc_super_gid")]),t._v(" settings in "),s("code",[t._v("/etc/sysctl.conf")]),t._v(", like earlier.")]),t._v(" "),s("p",[t._v("Also, you can override this by specifying desired options for "),s("code",[t._v("/proc")]),t._v(" in "),s("code",[t._v("/etc/fstab")]),t._v(".")]),t._v(" "),s("p",[t._v("To disable hidepid, add to "),s("code",[t._v("/etc/fstab")]),t._v(" the following:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("proc /proc proc defaults,hidepid=0,gid=0 0 0\n")])])])]),t._v("\nOr you can specify desired hidepid and gid values explicitly:\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("proc /proc proc defaults,hidepid=2,gid=clsupergid 0 0\n")])])])]),t._v("\n You should execute\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mount -o remount /proc\n")])])])]),t._v(" "),s("p",[t._v("to apply "),s("code",[t._v("/etc/fstab")]),t._v(" changes."),s("br"),t._v("\nNevertheless, we recommend to manage procfs mount options via "),s("code",[t._v("/etc/sysctl.conf")]),t._v(" as described above for backward compatibility.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("There is a known issue on CloudLinux 6 systems. User cannot see full /proc inside CageFS even when this user is in “super” group, that should see full /proc. This issue does not affect users with CageFS disabled. CloudLinux 7 is not affected.")])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Starting from lve-utils 3.0-21.2, lve_namespaces service can read parameters from the /etc/sysctl.d/90-cloudlinux.conf.")])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Even if fs.proc_can_see_other_uid and fs.proc_super_gid parameters are not set in config files but specified in /proc/sys, then when restarting lve_namespaces service the parameters from /proc/sys will be used. So, /proc will be remounted according to these parameters.")])]),s("h2",{attrs:{id:"ptrace-block"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ptrace-block"}},[t._v("#")]),t._v(" Ptrace block")]),t._v(" "),s("p",[t._v("Starting with kernel 3.10.0-427.18.s2.lve1.4.21 ( "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 7) and 2.6.32-673.26.1.lve1.4.17 ( "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 6) we re-implemented "),s("span",{staticClass:"notranslate"},[t._v(" ptrace block ")]),t._v(" to protect against "),s("span",{staticClass:"notranslate"},[t._v(" ptrace ")]),t._v(" family of vulnerabilities. It prevents end user from using any "),s("span",{staticClass:"notranslate"},[t._v(" ptrace ")]),t._v(" related functionality, including such commands as "),s("span",{staticClass:"notranslate"},[t._v(" strace, lsof ")]),t._v(" or "),s("span",{staticClass:"notranslate"},[t._v(" gdb ")]),t._v(" .")]),t._v(" "),s("p",[t._v("By default, "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" doesn't prevent "),s("span",{staticClass:"notranslate"},[t._v(" ptrace ")]),t._v(" functionality.")]),t._v(" "),s("p",[t._v("Defaults:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("kernel.user_ptrace = 1\nkernel.user_ptrace_self = 1\n")])])])]),t._v(" "),s("p",[t._v("The option "),s("span",{staticClass:"notranslate"},[t._v(" kernel.user_ptrace ")]),t._v(" disables "),s("span",{staticClass:"notranslate"},[t._v(" PTRACE_ATTACH ")]),t._v(" functionality, option "),s("span",{staticClass:"notranslate"},[t._v(" kernel.user_ptrace_self ")]),t._v(" disables "),s("span",{staticClass:"notranslate"},[t._v(" PTRACE_TRACEME ")]),t._v(" .")]),t._v(" "),s("p",[t._v("To disable all "),s("span",{staticClass:"notranslate"},[t._v(" ptrace ")]),t._v(" functionality change both "),s("span",{staticClass:"notranslate"},[t._v(" sysctl ")]),t._v(" options to 0, add this section to "),s("span",{staticClass:"notranslate"},[t._v(" /etc/sysctl.conf ")]),t._v(" :\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("## CL. Disable ptrace for users\nkernel.user_ptrace = 0\nkernel.user_ptrace_self = 0\n##\n")])])])]),t._v(" "),s("p",[t._v("Apply changes with:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ sysctl -p\n")])])])]),t._v(" "),s("p",[t._v("Different software could need different access to "),s("span",{staticClass:"notranslate"},[t._v(" ptrace ")]),t._v(" , you may need to change only one option to 0 to make them working. In this case, there will be only partial "),s("span",{staticClass:"notranslate"},[t._v(" ptrace ")]),t._v(" protection.")]),t._v(" "),s("p",[t._v("::: danger\nptrace protection is known to break PSA service for Plesk 11\n:::")]),t._v(" "),s("h2",{attrs:{id:"xen-xvda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xen-xvda"}},[t._v("#")]),t._v(" Xen XVDA")]),t._v(" "),s("p",[t._v("2.6.32 kernels have different mode of naming "),s("span",{staticClass:"notranslate"},[t._v(" Xen XVDA ")]),t._v(" drives.")]),t._v(" "),s("p",[t._v("By adding "),s("span",{staticClass:"notranslate"},[t._v(" xen_blkfront.sda_is_xvda=0 ")]),t._v(" to kernel boot line in "),s("span",{staticClass:"notranslate"},[t._v(" grub.conf ")]),t._v(" you will make sure no naming translation is done, and the drives will be identified as "),s("span",{staticClass:"notranslate"},[t._v(" xvde ")]),t._v(" .")]),t._v(" "),s("p",[t._v("By default, this option is set to 1 in the kernel, and drives are detected as "),s("span",{staticClass:"notranslate"},[t._v(" xvda ")]),t._v(" .\nThis is needed only for CloudLinux 6 and "),s("span",{staticClass:"notranslate"},[t._v(" Hybrid ")]),t._v(" kernels.")]),t._v(" "),s("h2",{attrs:{id:"io-limits-latency"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#io-limits-latency"}},[t._v("#")]),t._v(" IO limits latency")]),t._v(" "),s("p",[s("strong",[t._v("[lve1.2.29+]")])]),t._v(" "),s("p",[t._v("When customer reaches "),s("span",{staticClass:"notranslate"},[t._v(" IO Limit, the processes that are waiting for  "),s("span",{staticClass:"notranslate"},[t._v(" IO will be placed to sleep to make sure they don't go over the limit. That could make some processes sleep for a very long time. ")])]),t._v("\nBy defining "),s("span",{staticClass:"notranslate"},[t._v(" IO latency, you can make sure that no process sleeps due to  "),s("span",{staticClass:"notranslate"},[t._v(" IO limit for more then X milliseconds. By doing so, you will also let customers to burst through the limits, and use up more than they were limited too in some instances. ")])])]),t._v(" "),s("p",[t._v("This option is "),s("span",{staticClass:"notranslate"},[t._v(" OFF by default. ")])]),t._v(" "),s("p",[s("em",[t._v("For CloudLinux 6 and CloudLinux 7 (since Hybrid kernel lve1.4.x.el5h):")])]),t._v(" "),s("p",[t._v("To enable "),s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" Limits latency and set it to 10 seconds:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 10000 > /sys/module/kmodlve/parameters/latency\n")])])])]),t._v("\nTo disable latency:\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 2000000000 > /sys/module/kmodlve/parameters/latency\n")])])])]),t._v(" "),s("p",[t._v("It is possible to set, for example, 1000 as a permanent value. To do so, create a file "),s("span",{staticClass:"notranslate"},[t._v("/etc/modprobe.d/kmodlve.conf ")]),t._v(" with the following content:"),s("br"),t._v(" "),s("span",{staticClass:"notranslate"},[s("code",[t._v("options kmodlve latency=1000")])])]),t._v(" "),s("p",[s("em",[t._v("For "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 5 (OBSOLETE):")])]),t._v(" "),s("p",[t._v("To enable "),s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" Limits latency and set it to 10 seconds:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 10000 > /sys/module/iolimits/**parameters/latency\n")])])])]),t._v("\nTo disable latency:\n"),s("div",{staticClass:"notranslate"},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 2000000000 > /sys/module/iolimits/**parameters/latency\n")])])])]),t._v(" "),s("h2",{attrs:{id:"reading-lve-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reading-lve-usage"}},[t._v("#")]),t._v(" Reading LVE usage")]),t._v(" "),s("p",[t._v("CloudLinux kernel provides real time usage data in file.")]),t._v(" "),s("p",[t._v("All the statistics can be read from that file in real time. Depending on your kernel version you will get either Version 6 of the file, or version 4 of the file.\nYou can detect the version by reading the first line of the file. It should look like:")]),t._v(" "),s("p",[t._v("6:LVE... for version 6"),s("br"),t._v("\n4:LVE... for version 4")]),t._v(" "),s("p",[t._v("First line presents headers for the data.\nSecond line shows default limits for the server, with all other values being 0.\nThe rest of the lines present limits & usage data on per "),s("span",{staticClass:"notranslate"},[t._v(" LVE ")]),t._v(" bases.")]),t._v(" "),s("p",[t._v("Version 6 (CL6 & hybrid kernels):\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("6:LVE        EP        lCPU        lIO        CPU        MEM        IO        lMEM        lEP        nCPU        fMEM        fEP        lMEMPHY        lCPUW        lNPROC        MEMPHY        fMEMPHY        NPROC        fNPROC\n0        0        25        1024        0        0        0        262144        20        1        0        0        262144        100        0        0        0        00\n300        0        25        1024        1862407        0        0        262144        20        1        0        0        262144        100        0        31        000\n")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th"),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("Label")])]),t._v(" "),s("td",[s("strong",[t._v("Description")])]),t._v(" "),s("td",[s("strong",[t._v("Value")])]),t._v(" "),s("td",[s("strong",[t._v("Supported versions")])])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" LVE ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" LVE ID ")])]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" EP ")])]),t._v(" "),s("td",[t._v("Number of "),s("span",{staticClass:"notranslate"},[t._v(" entry processes ")])]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" lCPU ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" CPU ")]),t._v(" Limit")]),t._v(" "),s("td",[t._v("% relative to total "),s("span",{staticClass:"notranslate"},[t._v(" CPU power ")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" lIO ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" limits for CL6")]),t._v(" "),s("td",[t._v("KB/s for v6, from 1 to 100 for v4")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" CPU ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" CPU ")]),t._v(" usage since reboot")]),t._v(" "),s("td",[t._v("in nanoseconds for v6, hertz for v4")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" MEM ")])]),t._v(" "),s("td",[t._v("Virtual memory usage")]),t._v(" "),s("td",[t._v("number of 4k pages")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" IO ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" usage")]),t._v(" "),s("td",[t._v("KB/s for v6, 0 for v4")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" lMEM ")])]),t._v(" "),s("td",[t._v("Virtual memory limit")]),t._v(" "),s("td",[t._v("number of 4k pages")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" lEP ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" Entry Processes ")]),t._v(" limit")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" nCPU ")])]),t._v(" "),s("td",[t._v("Number of cores limit")]),t._v(" "),s("td",[t._v("number of cores")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" fMEM ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" Virtual memory ")]),t._v(" faults")]),t._v(" "),s("td",[t._v("number of faults")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" fEP ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" Entry Processes ")]),t._v(" faults")]),t._v(" "),s("td",[t._v("number of faults")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" lMEMPHY ")])]),t._v(" "),s("td",[t._v("Physical memory limit")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" lCPUW ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" CPU ")]),t._v(" weight (not used)")]),t._v(" "),s("td",[t._v("from 1 to 100")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" lNPROC ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" Number of processes ")]),t._v(" limit")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" MEMPHY ")])]),t._v(" "),s("td",[t._v("Physical memory usage")]),t._v(" "),s("td",[t._v("number of 4k pages")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" fMEMPHY ")])]),t._v(" "),s("td",[t._v("Physical memory faults")]),t._v(" "),s("td",[t._v("number of faults")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" NPROC ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" Number of processes ")])]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" fNPROC ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" Number of processes ")]),t._v(" faults")]),t._v(" "),s("td",[t._v("number of faults")]),t._v(" "),s("td",[t._v("v6+")])]),t._v(" "),s("tr",[s("td",[s("span",{staticClass:"notranslate"},[t._v(" IOPS ")])]),t._v(" "),s("td",[s("span",{staticClass:"notranslate"},[t._v(" IO ")]),t._v(" operations since reboot")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("v8+")])])])]),t._v(" "),s("h2",{attrs:{id:"flashcache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flashcache"}},[t._v("#")]),t._v(" Flashcache")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),s("p",[t._v("Available only for x86_64, "),s("span",{staticClass:"notranslate"},[t._v("CloudLinux")]),t._v(" 6 and Hybrid servers")])]),s("p",[s("span",{staticClass:"notranslate"},[t._v(" Flashcache ")]),t._v(" is a module originally written and released by "),s("span",{staticClass:"notranslate"},[t._v("  Facebook (Mohan Srinivasan, Paul Saab ")]),t._v(" and "),s("span",{staticClass:"notranslate"},[t._v(" Vadim Tkachenko ")]),t._v(" ) in April of 2010. It is a kernel module that allows Writethrough caching of a drive on another drive. This is most often used for caching a rotational drive on a smaller solid-state drive for performance reasons. This gives you the speed of an "),s("span",{staticClass:"notranslate"},[t._v(" SSD ")]),t._v(" and the size of a standard rotational drive for recently cached files. "),s("span",{staticClass:"notranslate"},[t._v(" Facebook ")]),t._v(" originally wrote the module to speed up database "),s("span",{staticClass:"notranslate"},[t._v(" I/O ")]),t._v(" , but it is easily extended to any "),s("span",{staticClass:"notranslate"},[t._v(" I/O ")]),t._v(" .")]),t._v(" "),s("p",[t._v("To install on "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 6 & Hybrid servers:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ yum install flashcache\n")])])])]),t._v(" "),s("p",[t._v("More info on "),s("span",{staticClass:"notranslate"},[t._v(" flashcache ")]),t._v(" : "),s("a",{attrs:{href:"https://github.com/facebook/flashcache/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/facebook/flashcache/"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("span",{staticClass:"notranslate"},[t._v(" ArchLinux ")]),t._v(" has a good page explaining how to use "),s("span",{staticClass:"notranslate"},[t._v(" flashcache ")]),t._v(" :\n"),s("a",{attrs:{href:"https://wiki.archlinux.org/index.php/Flashcache",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://wiki.archlinux.org/index.php/Flashcache"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"oom-killer-for-lve-processes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oom-killer-for-lve-processes"}},[t._v("#")]),t._v(" OOM killer for LVE processes")]),t._v(" "),s("p",[t._v("When "),s("span",{staticClass:"notranslate"},[t._v("LVE")]),t._v(" reaches its memory limit, the processes inside that "),s("span",{staticClass:"notranslate"},[t._v(" LVE ")]),t._v(" are killed by "),s("span",{staticClass:"notranslate"},[t._v(" OOM Killer ")]),t._v(" and appropriate message is written to "),s("span",{staticClass:"notranslate"},[t._v(" /var/log/messages ")]),t._v(" . When any "),s("span",{staticClass:"notranslate"},[t._v(" LVE ")]),t._v(" hits huge number of memory limits in short period of time, then "),s("span",{staticClass:"notranslate"},[t._v(" OOM Killer ")]),t._v(" could cause system overload. Starting from kernel 2.6.32-673.26.1.lve1.4.15 ( "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 6) and from kernel 3.10.0-427.18.2.lve1.4.14 ( "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 7) heavy "),s("span",{staticClass:"notranslate"},[t._v(" OOM Killer ")]),t._v(" could be disabled. If so - lightweight "),s("span",{staticClass:"notranslate"},[t._v(" SIGKILL ")]),t._v(" will be used instead.")]),t._v(" "),s("p",[t._v("By default "),s("span",{staticClass:"notranslate"},[t._v(" OOM Killer ")]),t._v(" is enabled, to disable it please run:")]),t._v(" "),s("p",[s("em",[t._v("For "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 6")]),t._v(" :\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 1 > /proc/sys/ubc/ubc_oom_disable\n")])])])]),t._v(" "),s("p",[t._v("Also, add the following to "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/sysctl.conf")])]),t._v(" file to apply the same during boot:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ubc.ubc_oom_disable=1\n")])])])]),t._v(" "),s("p",[s("em",[t._v("For "),s("span",{staticClass:"notranslate"},[t._v(" CloudLinux ")]),t._v(" 7:")])]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 1 > /proc/sys/kernel/memcg_oom_disable\n")])])])]),t._v(" "),s("p",[t._v("Also, add the following to "),s("span",{staticClass:"notranslate"},[s("em",[t._v("/etc/sysctl.conf")])]),t._v(" file to apply the same during boot:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("kernel.memcg_oom_disable=1\n")])])])]),t._v(" "),s("h2",{attrs:{id:"file-system-quotas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file-system-quotas"}},[t._v("#")]),t._v(" File system quotas")]),t._v(" "),s("p",[t._v("In "),s("span",{staticClass:"notranslate"},[s("strong",[t._v("Ext4")])]),t._v(" file system, the process with enabled capability "),s("span",{staticClass:"notranslate"},[t._v(" CAP_SYS_RESOURCE ")]),t._v(" is not checked on the quota exceeding by default. It allows userland utilities "),s("span",{staticClass:"notranslate"},[s("em",[t._v("selectorctl")])]),t._v(" and "),s("span",{staticClass:"notranslate"},[s("em",[t._v("cagefs")])]),t._v(" to operate without fails even if a user exceeds a quota.")]),t._v(" "),s("p",[t._v("To disable quota checking in "),s("span",{staticClass:"notranslate"},[s("strong",[t._v("XFS")])]),t._v(" file system set "),s("span",{staticClass:"notranslate"},[s("em",[t._v("cap_res_quota_disable")])]),t._v(" option to 1 using the following command:\n")]),s("div",{staticClass:"notranslate"},[s("p"),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 1 > /proc/sys/fs/xfs/cap_res_quota_disable\n")])])])])])},[],!1,null,null,null);e.default=n.exports}}]);